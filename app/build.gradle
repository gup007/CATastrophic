apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {

    compileSdkVersion versions.compileSdk
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId names.applicationId
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "androidx.core:core-ktx:${versions.androidx}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}"

    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:${versions.lifecycle}"
    compileOnly 'com.squareup.inject:assisted-inject-annotations-dagger2:0.5.2'
    kapt 'com.squareup.inject:assisted-inject-processor-dagger2:0.5.2'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'

    // Dagger
    implementation "com.google.dagger:dagger:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"

    // Rest
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp3}"
    implementation "com.squareup.picasso:picasso:${versions.picasso}"

    // Room
    def room_version = "2.3.0-alpha02"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    def paging_version = "3.0.0-alpha07"
    implementation "androidx.paging:paging-runtime:$paging_version"
    // alternatively - without Android dependencies for tests
    testImplementation "androidx.paging:paging-common:$paging_version"
    // optional - RxJava2 support
    implementation "androidx.paging:paging-rxjava2:$paging_version"
    // optional - Guava ListenableFuture support
    implementation "androidx.paging:paging-guava:$paging_version"

    // Test
    androidTestImplementation "androidx.test:core:${versions.core}"
    androidTestImplementation "androidx.test.ext:junit:${versions.extJUnit}"
    androidTestImplementation "androidx.test:runner:${versions.runner}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espresso}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${versions.espresso}"

    // Mockk.io
    def mockk_version = "1.9.3"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"


}